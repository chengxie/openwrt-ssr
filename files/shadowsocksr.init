#!/bin/sh /etc/rc.common
#
# Copyright (C) 2014-2017 Jian Chang <aa65535@live.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=90
STOP=15

NAME=shadowsocksr
EXTRA_COMMANDS=rules

uci_get_by_name() {
	local ret=$(uci get $NAME.$1.$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_bool_by_name() {
	case "$(uci_get_by_name $1 $2)" in
		1|on|true|yes|enabled) return 0;;
	esac
	return 1
}

validate_server() {
	[ "$(uci get $NAME.$1 2>/dev/null)" = "servers" ]
}

has_valid_server() {
	for server in $@; do
		validate_server $server && return 0
	done
	return 1
}

get_arg_udp() {
	local server=$(uci_get_by_type general udp_relay_server)
	[ "$server" = "same" ] || validate_server $server && echo "-u"
}

get_arg_out() {
	case "$(uci_get_by_type access_control self_proxy 1)" in
		1) echo "-o";;
		2) echo "-O";;
	esac
}

get_arg_tfo() {
	uci_bool_by_name $1 fast_open && echo "--fast-open"
}

get_lan_hosts() {
	uci_bool_by_name $1 enable && \
		echo "$(uci_get_by_name $1 type),$(uci_get_by_name $1 macaddr)"
}

#resolve domain to ip
#$1: server name by hash
get_server_ip() {
	local host=$(uci_get_by_name $1 server)
	if echo $host|grep -E "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$">/dev/null; then         
		hostip=${host}
	elif  [ "$host" != "${host#*:[0-9a-fA-F]}" ] ;then
		hostip=${host}
	else
		hostip=`ping ${host} -s 1 -c 1 | grep PING | cut -d'(' -f 2 | cut -d')' -f1`
		if echo $hostip|grep -E "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$">/dev/null; then
			hostip=${hostip}
		else
			hostip=`cat /etc/ssr_ip`
		fi
	fi
	echo $hostip
}

get_server_ips() {
	echo $(get_server_ip $1)
}

#$1: server name by hash
#$2: if is "-U" then this is udp, else not
gen_config_file() {
	local hostip=$(get_server_ip $1)
	local config_file=/var/etc/${NAME}.$1.json
	local fastopen="false"
	if [ "$2" = "-U" ] ;then
		config_file=/var/etc/${NAME}_upd.$1.json
	fi
	if [ $(uci_get_by_name $1 fast_open) = "1" ] ;then
		fastopen="true"
	fi

	cat <<-EOF >$config_file
		{
			"server": "$hostip",
			"server_port": $(uci_get_by_name $1 server_port),
			"local_address": "0.0.0.0",
			"timeout": $(uci_get_by_name $1 timeout 60),
			"password": "$(uci_get_by_name $1 password)",
			"method": "$(uci_get_by_name $1 encrypt_method)",
			"protocol": "$(uci_get_by_name $1 protocol)",
			"obfs": "$(uci_get_by_name $1 obfs)",
			"obfs_param": "$(uci_get_by_name $1 obfs_param)",
			"fast_open": $fastopen
		}
	EOF
	echo $config_file
}

start_rules() {
	config_load $NAME
	/usr/bin/ssr-rules \
		-s "$(config_foreach get_server_ips servers)" \
		-l "$(uci_get_by_type general local_port 1234)" \
		-B "$(uci_get_by_type access_control wan_bp_list)" \
		-b "$(uci_get_by_type access_control wan_bp_ips)" \
		-W "$(uci_get_by_type access_control wan_fw_list)" \
		-w "$(uci_get_by_type access_control wan_fw_ips)" \
		-I "$(uci_get_by_type access_control lan_ifaces)" \
		-d "$(uci_get_by_type access_control lan_target)" \
		-a "$(config_foreach get_lan_hosts lan_hosts)" \
		-e "$(uci_get_by_type access_control ipt_ext)" \
		$(get_arg_out) $(get_arg_udp)
}

rules() {
	[ "$MAIN_SERVER" = "nil" ] && return 1
	mkdir -p /var/run /var/etc /var/etc/$NAME
	UDP_RELAY_SERVER=$(uci_get_by_type general udp_relay_server)
	[ "$UDP_RELAY_SERVER" = "same" ] && UDP_RELAY_SERVER=$MAIN_SERVER
	pidof ssr-redir >/dev/null || return 0
	start_rules || /usr/bin/ssr-rules -f
}

start_redir() {
	validate_server $1 || return 0
	ssr-redir -c $(gen_config_file $1 $2) $2 \
		-l $(uci_get_by_type general local_port 1234) \
		--mtu $(uci_get_by_type general mtu 1492) \
		-f /var/run/ssr-redir$3-$1.pid
}

ssr_redir() {
	command -v ssr-redir >/dev/null 2>&1 || return 1
	local main_server=$(uci_get_by_type general main_server)
	local udp_relay_server=$(uci_get_by_type general udp_relay_server)
	if [ "$udp_relay_server" = "same" ]; then
		start_redir $main_server -u
	else
		start_redir $main_server
		if [ "$udp_relay_server" != "nil" ]; then
			start_redir $udp_relay_server -U -udp
		fi
	fi
}

start() {

	MAIN_SERVER=$(uci_get_by_type general main_server)
	mkdir -p /var/run /var/etc /var/etc/$NAME
	ssr_redir && rules
}

boot() {
	local delay=$(uci_get_by_type general startup_delay 0)
	(sleep $delay && start >/dev/null 2>&1) &
	return 0
}

kill_all() {
	kill -9 $(pidof $@) >/dev/null 2>&1
}

stop() {
	/usr/bin/ssr-rules -f
	kill_all ssr-redir 
}

